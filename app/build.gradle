apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.neenbedankt.android-apt' //needed for source code generation

int minSdk = hasProperty('devMinSdk') ? devMinSdk.toInteger() : 14

def globalConf = rootProject.ext
android {

    compileSdkVersion 24
    buildToolsVersion "24.0.2"

    signingConfigs {
        debug {
            storeFile file(globalConf.debugKeystore)
            storePassword globalConf.debugKeystorePass
            keyAlias globalConf.debugAlias
            keyPassword globalConf.debugAliasPass
        }
        
        release {
            storeFile file(globalConf.keystore)
            storePassword globalConf.keystorePass
            keyAlias globalConf.alias
            keyPassword globalConf.aliasPass
        }
    }

    defaultConfig {
        applicationId "org.stepic.droid"
        minSdkVersion minSdk
        targetSdkVersion 24
        versionCode 99
        versionName "1.20"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // Enabling multidex support.
        multiDexEnabled true
    }


    productFlavors {
        sb {
            applicationId "org.stepic.droid.sb"
        }
        classic {
            applicationId "org.stepic.droid"
        }
        releasedev {
            applicationId "org.stepic.droid.release"
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    splits {
        abi {
            enable !project.hasProperty('noSplitBuild')
            reset()
            include 'armeabi-v7a', 'mips', 'x86', 'x86_64', 'arm64-v8a'
            //select ABIs to build APKs for
            universalApk false //generate an additional APK that contains all the ABIs
        }
    }

    // map for the version code
    project.ext.versionCodes = ['armeabi-v7a': 2, 'arm64-v8a': 3, 'mips': 5, 'x86': 8, 'x86_64': 9]

    android.applicationVariants.all { variant ->
        // assign different version code for each output
        variant.outputs.each { output ->
            output.versionCodeOverride =
                    project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0) + android.defaultConfig.versionCode * 10
        }
    }

    // delete unaligned files
    android.applicationVariants.all { variant ->
        variant.assemble.doLast {
            variant.outputs.each { output ->
                File unaligned = output.packageApplication.outputFile;
                File aligned = output.outputFile
                if (!unaligned.getName().equalsIgnoreCase(aligned.getName())) {
                    println "deleting " + unaligned.getName()
                    unaligned.delete()
                }
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
            versionNameSuffix "DEV"
        }
    }
}

dependencies {

    //<DI>
    apt 'com.google.dagger:dagger-compiler:2.5'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.google.dagger:dagger:2.5'
    provided 'javax.annotation:jsr250-api:1.0'
    //needed to resolve compilation errors, thanks to tutplus.org for finding the dependency
    compile 'com.jakewharton:butterknife:8.2.1'
    apt 'com.jakewharton:butterknife-compiler:8.2.1'
    //</DI>

    compile 'com.android.support:multidex:1.0.1'
    compile 'com.google.code.gson:gson:2.7'

    compile 'de.hdodenhof:circleimageview:1.3.0'

    compile 'com.android.support:appcompat-v7:24.2.0'
    compile 'com.android.support:design:24.2.0'
    compile 'com.android.support:recyclerview-v7:24.2.0'
    compile 'com.android.support:cardview-v7:24.2.0'
    compile 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'

    compile 'joda-time:joda-time:2.8'

    compile 'com.squareup.retrofit:retrofit:2.0.0-beta2'
    compile 'com.squareup.retrofit:converter-gson:2.0.0-beta2'

    compile 'com.squareup:otto:1.3.8'

    // AppMetrica from maven central. Protobuf will be included as dependency.
    compile 'com.yandex.android:mobmetricalib:2.42'

    compile 'jp.wasabeef:recyclerview-animators:2.1.0'

    compile 'uk.co.chrisjenx:calligraphy:2.1.0'

    compile 'me.zhanghai.android.materialprogressbar:library:1.1.6'

    // Required -- JUnit 4 framework
    testCompile 'junit:junit:4.12'
    // Optional -- Mockito framework
    testCompile 'org.mockito:mockito-core:1.10.19'

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile 'de.mrmaffen:vlc-android-sdk:1.9.8'

    compile 'org.jsoup:jsoup:1.8.3'

    compile 'com.google.firebase:firebase-messaging:9.4.0'
    compile 'com.google.android.gms:play-services-appindexing:9.4.0'
    compile 'com.google.android.gms:play-services-auth:9.4.0'
    compile 'com.google.firebase:firebase-core:9.4.0'
    compile 'com.google.firebase:firebase-crash:9.4.0'

    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.jakewharton.timber:timber:4.3.1'
}

repositories {
    mavenCentral()
}
buildscript {
    ext.kotlin_version = '1.0.3'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }

}
apply plugin: 'com.google.gms.google-services'